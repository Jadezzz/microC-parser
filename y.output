Terminals unused in grammar

   FOR
   LSB
   RSB


Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: decl_list decl
    3          | decl

    4 decl: var_decl
    5     | fun_decl

    6 var_decl: type_spec ID SEMICOLON
    7         | type_spec ID ASGN expr SEMICOLON

    8 type_spec: VOID
    9          | BOOL
   10          | INT
   11          | FLOAT
   12          | STRING

   13 fun_decl: type_spec ID LB params RB function_compound_stmt
   14         | type_spec ID LB params RB SEMICOLON

   15 params: param_list
   16       | VOID

   17 param_list: param_list COMMA param
   18           | param

   19 param: type_spec ID
   20      | %empty

   21 $@1: %empty

   22 function_compound_stmt: LCB $@1 content_list RCB

   23 $@2: %empty

   24 compound_stmt: LCB $@2 content_list RCB

   25 content_list: content_list content
   26             | %empty

   27 content: var_decl
   28        | stmt

   29 stmt: expr SEMICOLON
   30     | compound_stmt
   31     | if_stmt
   32     | while_stmt
   33     | return_stmt
   34     | print_stmt SEMICOLON

   35 print_stmt: PRINT LB ID RB
   36           | PRINT LB STRING RB

   37 while_stmt: WHILE LB expr RB stmt

   38 if_stmt: IF LB expr RB stmt
   39        | IF LB expr RB stmt ELSE stmt

   40 return_stmt: RET SEMICOLON
   41            | RET expr SEMICOLON

   42 expr: ID ASGN expr
   43     | ID ADDASGN expr
   44     | ID SUBASGN expr
   45     | ID MULASGN expr
   46     | ID DIVASGN expr
   47     | ID MODASGN expr
   48     | expr OR expr
   49     | expr AND expr
   50     | expr EQ expr
   51     | expr NE expr
   52     | expr LTE expr
   53     | expr LT expr
   54     | expr MTE expr
   55     | expr MT expr
   56     | expr ADD expr
   57     | expr SUB expr
   58     | expr MUL expr
   59     | expr DIV expr
   60     | expr MOD expr
   61     | NOT expr
   62     | expr INC
   63     | expr DEC
   64     | LB expr RB
   65     | ID
   66     | ID LB args RB
   67     | TRUE
   68     | FALSE
   69     | I_CONST
   70     | F_CONST
   71     | SUB I_CONST
   72     | SUB F_CONST
   73     | STRING

   74 arg_list: arg_list COMMA expr
   75         | expr

   76 args: arg_list
   77     | %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
PRINT (258) 35 36
IF (259) 38 39
ELSE (260) 39
FOR (261)
WHILE (262) 37
SEMICOLON (263) 6 7 14 29 34 40 41
ADD (264) 56
SUB (265) 57 71 72
MUL (266) 58
DIV (267) 59
MOD (268) 60
INC (269) 62
DEC (270) 63
MT (271) 55
LT (272) 53
MTE (273) 54
LTE (274) 52
EQ (275) 50
NE (276) 51
ASGN (277) 7 42
ADDASGN (278) 43
SUBASGN (279) 44
MULASGN (280) 45
DIVASGN (281) 46
MODASGN (282) 47
AND (283) 49
OR (284) 48
NOT (285) 61
LB (286) 13 14 35 36 37 38 39 64 66
RB (287) 13 14 35 36 37 38 39 64 66
LCB (288) 22 24
RCB (289) 22 24
LSB (290)
RSB (291)
COMMA (292) 17 74
TRUE (293) 67
FALSE (294) 68
RET (295) 40 41
I_CONST (296) 69 71
F_CONST (297) 70 72
STRING (298) 12 36 73
ID (299) 6 7 13 14 19 35 42 43 44 45 46 47 65 66
VOID (300) 8 16
INT (301) 10
FLOAT (302) 11
BOOL (303) 9
IFX (304)


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
program (51)
    on left: 1, on right: 0
decl_list (52)
    on left: 2 3, on right: 1 2
decl (53)
    on left: 4 5, on right: 2 3
var_decl (54)
    on left: 6 7, on right: 4 27
type_spec (55)
    on left: 8 9 10 11 12, on right: 6 7 13 14 19
fun_decl (56)
    on left: 13 14, on right: 5
params (57)
    on left: 15 16, on right: 13 14
param_list (58)
    on left: 17 18, on right: 15 17
param (59)
    on left: 19 20, on right: 17 18
function_compound_stmt (60)
    on left: 22, on right: 13
$@1 (61)
    on left: 21, on right: 22
compound_stmt (62)
    on left: 24, on right: 30
$@2 (63)
    on left: 23, on right: 24
content_list (64)
    on left: 25 26, on right: 22 24 25
content (65)
    on left: 27 28, on right: 25
stmt (66)
    on left: 29 30 31 32 33 34, on right: 28 37 38 39
print_stmt (67)
    on left: 35 36, on right: 34
while_stmt (68)
    on left: 37, on right: 32
if_stmt (69)
    on left: 38 39, on right: 31
return_stmt (70)
    on left: 40 41, on right: 33
expr (71)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
    60 61 62 63 64 65 66 67 68 69 70 71 72 73, on right: 7 29 37 38
    39 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
    61 62 63 64 74 75
arg_list (72)
    on left: 74 75, on right: 74 76
args (73)
    on left: 76 77, on right: 66


State 0

    0 $accept: . program $end

    STRING  shift, and go to state 1
    VOID    shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    BOOL    shift, and go to state 5

    program    go to state 6
    decl_list  go to state 7
    decl       go to state 8
    var_decl   go to state 9
    type_spec  go to state 10
    fun_decl   go to state 11


State 1

   12 type_spec: STRING .

    $default  reduce using rule 12 (type_spec)


State 2

    8 type_spec: VOID .

    $default  reduce using rule 8 (type_spec)


State 3

   10 type_spec: INT .

    $default  reduce using rule 10 (type_spec)


State 4

   11 type_spec: FLOAT .

    $default  reduce using rule 11 (type_spec)


State 5

    9 type_spec: BOOL .

    $default  reduce using rule 9 (type_spec)


State 6

    0 $accept: program . $end

    $end  shift, and go to state 12


State 7

    1 program: decl_list .
    2 decl_list: decl_list . decl

    STRING  shift, and go to state 1
    VOID    shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 1 (program)

    decl       go to state 13
    var_decl   go to state 9
    type_spec  go to state 10
    fun_decl   go to state 11


State 8

    3 decl_list: decl .

    $default  reduce using rule 3 (decl_list)


State 9

    4 decl: var_decl .

    $default  reduce using rule 4 (decl)


State 10

    6 var_decl: type_spec . ID SEMICOLON
    7         | type_spec . ID ASGN expr SEMICOLON
   13 fun_decl: type_spec . ID LB params RB function_compound_stmt
   14         | type_spec . ID LB params RB SEMICOLON

    ID  shift, and go to state 14


State 11

    5 decl: fun_decl .

    $default  reduce using rule 5 (decl)


State 12

    0 $accept: program $end .

    $default  accept


State 13

    2 decl_list: decl_list decl .

    $default  reduce using rule 2 (decl_list)


State 14

    6 var_decl: type_spec ID . SEMICOLON
    7         | type_spec ID . ASGN expr SEMICOLON
   13 fun_decl: type_spec ID . LB params RB function_compound_stmt
   14         | type_spec ID . LB params RB SEMICOLON

    SEMICOLON  shift, and go to state 15
    ASGN       shift, and go to state 16
    LB         shift, and go to state 17


State 15

    6 var_decl: type_spec ID SEMICOLON .

    $default  reduce using rule 6 (var_decl)


State 16

    7 var_decl: type_spec ID ASGN . expr SEMICOLON

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 27


State 17

   13 fun_decl: type_spec ID LB . params RB function_compound_stmt
   14         | type_spec ID LB . params RB SEMICOLON

    STRING  shift, and go to state 1
    VOID    shift, and go to state 28
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 20 (param)

    type_spec   go to state 29
    params      go to state 30
    param_list  go to state 31
    param       go to state 32


State 18

   71 expr: SUB . I_CONST
   72     | SUB . F_CONST

    I_CONST  shift, and go to state 33
    F_CONST  shift, and go to state 34


State 19

   61 expr: NOT . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 35


State 20

   64 expr: LB . expr RB

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 36


State 21

   67 expr: TRUE .

    $default  reduce using rule 67 (expr)


State 22

   68 expr: FALSE .

    $default  reduce using rule 68 (expr)


State 23

   69 expr: I_CONST .

    $default  reduce using rule 69 (expr)


State 24

   70 expr: F_CONST .

    $default  reduce using rule 70 (expr)


State 25

   73 expr: STRING .

    $default  reduce using rule 73 (expr)


State 26

   42 expr: ID . ASGN expr
   43     | ID . ADDASGN expr
   44     | ID . SUBASGN expr
   45     | ID . MULASGN expr
   46     | ID . DIVASGN expr
   47     | ID . MODASGN expr
   65     | ID .
   66     | ID . LB args RB

    ASGN     shift, and go to state 37
    ADDASGN  shift, and go to state 38
    SUBASGN  shift, and go to state 39
    MULASGN  shift, and go to state 40
    DIVASGN  shift, and go to state 41
    MODASGN  shift, and go to state 42
    LB       shift, and go to state 43

    $default  reduce using rule 65 (expr)


State 27

    7 var_decl: type_spec ID ASGN expr . SEMICOLON
   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    SEMICOLON  shift, and go to state 44
    ADD        shift, and go to state 45
    SUB        shift, and go to state 46
    MUL        shift, and go to state 47
    DIV        shift, and go to state 48
    MOD        shift, and go to state 49
    INC        shift, and go to state 50
    DEC        shift, and go to state 51
    MT         shift, and go to state 52
    LT         shift, and go to state 53
    MTE        shift, and go to state 54
    LTE        shift, and go to state 55
    EQ         shift, and go to state 56
    NE         shift, and go to state 57
    AND        shift, and go to state 58
    OR         shift, and go to state 59


State 28

    8 type_spec: VOID .
   16 params: VOID .

    RB        reduce using rule 16 (params)
    $default  reduce using rule 8 (type_spec)


State 29

   19 param: type_spec . ID

    ID  shift, and go to state 60


State 30

   13 fun_decl: type_spec ID LB params . RB function_compound_stmt
   14         | type_spec ID LB params . RB SEMICOLON

    RB  shift, and go to state 61


State 31

   15 params: param_list .
   17 param_list: param_list . COMMA param

    COMMA  shift, and go to state 62

    $default  reduce using rule 15 (params)


State 32

   18 param_list: param .

    $default  reduce using rule 18 (param_list)


State 33

   71 expr: SUB I_CONST .

    $default  reduce using rule 71 (expr)


State 34

   72 expr: SUB F_CONST .

    $default  reduce using rule 72 (expr)


State 35

   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   61     | NOT expr .
   62     | expr . INC
   63     | expr . DEC

    INC  error (nonassociative)
    DEC  error (nonassociative)

    $default  reduce using rule 61 (expr)


State 36

   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC
   64     | LB expr . RB

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    MT   shift, and go to state 52
    LT   shift, and go to state 53
    MTE  shift, and go to state 54
    LTE  shift, and go to state 55
    EQ   shift, and go to state 56
    NE   shift, and go to state 57
    AND  shift, and go to state 58
    OR   shift, and go to state 59
    RB   shift, and go to state 63


State 37

   42 expr: ID ASGN . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 64


State 38

   43 expr: ID ADDASGN . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 65


State 39

   44 expr: ID SUBASGN . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 66


State 40

   45 expr: ID MULASGN . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 67


State 41

   46 expr: ID DIVASGN . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 68


State 42

   47 expr: ID MODASGN . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 69


State 43

   66 expr: ID LB . args RB

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    $default  reduce using rule 77 (args)

    expr      go to state 70
    arg_list  go to state 71
    args      go to state 72


State 44

    7 var_decl: type_spec ID ASGN expr SEMICOLON .

    $default  reduce using rule 7 (var_decl)


State 45

   56 expr: expr ADD . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 73


State 46

   57 expr: expr SUB . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 74


State 47

   58 expr: expr MUL . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 75


State 48

   59 expr: expr DIV . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 76


State 49

   60 expr: expr MOD . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 77


State 50

   62 expr: expr INC .

    $default  reduce using rule 62 (expr)


State 51

   63 expr: expr DEC .

    $default  reduce using rule 63 (expr)


State 52

   55 expr: expr MT . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 78


State 53

   53 expr: expr LT . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 79


State 54

   54 expr: expr MTE . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 80


State 55

   52 expr: expr LTE . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 81


State 56

   50 expr: expr EQ . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 82


State 57

   51 expr: expr NE . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 83


State 58

   49 expr: expr AND . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 84


State 59

   48 expr: expr OR . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 85


State 60

   19 param: type_spec ID .

    $default  reduce using rule 19 (param)


State 61

   13 fun_decl: type_spec ID LB params RB . function_compound_stmt
   14         | type_spec ID LB params RB . SEMICOLON

    SEMICOLON  shift, and go to state 86
    LCB        shift, and go to state 87

    function_compound_stmt  go to state 88


State 62

   17 param_list: param_list COMMA . param

    STRING  shift, and go to state 1
    VOID    shift, and go to state 2
    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 20 (param)

    type_spec  go to state 29
    param      go to state 89


State 63

   64 expr: LB expr RB .

    $default  reduce using rule 64 (expr)


State 64

   42 expr: ID ASGN expr .
   48     | expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    MT   shift, and go to state 52
    LT   shift, and go to state 53
    MTE  shift, and go to state 54
    LTE  shift, and go to state 55
    EQ   shift, and go to state 56
    NE   shift, and go to state 57
    AND  shift, and go to state 58
    OR   shift, and go to state 59

    $default  reduce using rule 42 (expr)


State 65

   43 expr: ID ADDASGN expr .
   48     | expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    MT   shift, and go to state 52
    LT   shift, and go to state 53
    MTE  shift, and go to state 54
    LTE  shift, and go to state 55
    EQ   shift, and go to state 56
    NE   shift, and go to state 57
    AND  shift, and go to state 58
    OR   shift, and go to state 59

    $default  reduce using rule 43 (expr)


State 66

   44 expr: ID SUBASGN expr .
   48     | expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    MT   shift, and go to state 52
    LT   shift, and go to state 53
    MTE  shift, and go to state 54
    LTE  shift, and go to state 55
    EQ   shift, and go to state 56
    NE   shift, and go to state 57
    AND  shift, and go to state 58
    OR   shift, and go to state 59

    $default  reduce using rule 44 (expr)


State 67

   45 expr: ID MULASGN expr .
   48     | expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    MT   shift, and go to state 52
    LT   shift, and go to state 53
    MTE  shift, and go to state 54
    LTE  shift, and go to state 55
    EQ   shift, and go to state 56
    NE   shift, and go to state 57
    AND  shift, and go to state 58
    OR   shift, and go to state 59

    $default  reduce using rule 45 (expr)


State 68

   46 expr: ID DIVASGN expr .
   48     | expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    MT   shift, and go to state 52
    LT   shift, and go to state 53
    MTE  shift, and go to state 54
    LTE  shift, and go to state 55
    EQ   shift, and go to state 56
    NE   shift, and go to state 57
    AND  shift, and go to state 58
    OR   shift, and go to state 59

    $default  reduce using rule 46 (expr)


State 69

   47 expr: ID MODASGN expr .
   48     | expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    MT   shift, and go to state 52
    LT   shift, and go to state 53
    MTE  shift, and go to state 54
    LTE  shift, and go to state 55
    EQ   shift, and go to state 56
    NE   shift, and go to state 57
    AND  shift, and go to state 58
    OR   shift, and go to state 59

    $default  reduce using rule 47 (expr)


State 70

   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC
   75 arg_list: expr .

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    MT   shift, and go to state 52
    LT   shift, and go to state 53
    MTE  shift, and go to state 54
    LTE  shift, and go to state 55
    EQ   shift, and go to state 56
    NE   shift, and go to state 57
    AND  shift, and go to state 58
    OR   shift, and go to state 59

    $default  reduce using rule 75 (arg_list)


State 71

   74 arg_list: arg_list . COMMA expr
   76 args: arg_list .

    COMMA  shift, and go to state 90

    $default  reduce using rule 76 (args)


State 72

   66 expr: ID LB args . RB

    RB  shift, and go to state 91


State 73

   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   56     | expr ADD expr .
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 56 (expr)


State 74

   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   57     | expr SUB expr .
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 57 (expr)


State 75

   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   58     | expr MUL expr .
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 58 (expr)


State 76

   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   59     | expr DIV expr .
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 59 (expr)


State 77

   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   60     | expr MOD expr .
   62     | expr . INC
   63     | expr . DEC

    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 60 (expr)


State 78

   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   55     | expr MT expr .
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 55 (expr)


State 79

   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   53     | expr LT expr .
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 53 (expr)


State 80

   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   54     | expr MTE expr .
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 54 (expr)


State 81

   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   52     | expr LTE expr .
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51

    $default  reduce using rule 52 (expr)


State 82

   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   50     | expr EQ expr .
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    MT   shift, and go to state 52
    LT   shift, and go to state 53
    MTE  shift, and go to state 54
    LTE  shift, and go to state 55

    $default  reduce using rule 50 (expr)


State 83

   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   51     | expr NE expr .
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    MT   shift, and go to state 52
    LT   shift, and go to state 53
    MTE  shift, and go to state 54
    LTE  shift, and go to state 55

    $default  reduce using rule 51 (expr)


State 84

   48 expr: expr . OR expr
   49     | expr . AND expr
   49     | expr AND expr .
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    MT   shift, and go to state 52
    LT   shift, and go to state 53
    MTE  shift, and go to state 54
    LTE  shift, and go to state 55

    $default  reduce using rule 49 (expr)


State 85

   48 expr: expr . OR expr
   48     | expr OR expr .
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    MT   shift, and go to state 52
    LT   shift, and go to state 53
    MTE  shift, and go to state 54
    LTE  shift, and go to state 55

    $default  reduce using rule 48 (expr)


State 86

   14 fun_decl: type_spec ID LB params RB SEMICOLON .

    $default  reduce using rule 14 (fun_decl)


State 87

   22 function_compound_stmt: LCB . $@1 content_list RCB

    $default  reduce using rule 21 ($@1)

    $@1  go to state 92


State 88

   13 fun_decl: type_spec ID LB params RB function_compound_stmt .

    $default  reduce using rule 13 (fun_decl)


State 89

   17 param_list: param_list COMMA param .

    $default  reduce using rule 17 (param_list)


State 90

   74 arg_list: arg_list COMMA . expr

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 93


State 91

   66 expr: ID LB args RB .

    $default  reduce using rule 66 (expr)


State 92

   22 function_compound_stmt: LCB $@1 . content_list RCB

    $default  reduce using rule 26 (content_list)

    content_list  go to state 94


State 93

   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC
   74 arg_list: arg_list COMMA expr .

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    MT   shift, and go to state 52
    LT   shift, and go to state 53
    MTE  shift, and go to state 54
    LTE  shift, and go to state 55
    EQ   shift, and go to state 56
    NE   shift, and go to state 57
    AND  shift, and go to state 58
    OR   shift, and go to state 59

    $default  reduce using rule 74 (arg_list)


State 94

   22 function_compound_stmt: LCB $@1 content_list . RCB
   25 content_list: content_list . content

    PRINT    shift, and go to state 95
    IF       shift, and go to state 96
    WHILE    shift, and go to state 97
    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    LCB      shift, and go to state 98
    RCB      shift, and go to state 99
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    RET      shift, and go to state 100
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 101
    ID       shift, and go to state 26
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    BOOL     shift, and go to state 5

    var_decl       go to state 102
    type_spec      go to state 103
    compound_stmt  go to state 104
    content        go to state 105
    stmt           go to state 106
    print_stmt     go to state 107
    while_stmt     go to state 108
    if_stmt        go to state 109
    return_stmt    go to state 110
    expr           go to state 111


State 95

   35 print_stmt: PRINT . LB ID RB
   36           | PRINT . LB STRING RB

    LB  shift, and go to state 112


State 96

   38 if_stmt: IF . LB expr RB stmt
   39        | IF . LB expr RB stmt ELSE stmt

    LB  shift, and go to state 113


State 97

   37 while_stmt: WHILE . LB expr RB stmt

    LB  shift, and go to state 114


State 98

   24 compound_stmt: LCB . $@2 content_list RCB

    $default  reduce using rule 23 ($@2)

    $@2  go to state 115


State 99

   22 function_compound_stmt: LCB $@1 content_list RCB .

    $default  reduce using rule 22 (function_compound_stmt)


State 100

   40 return_stmt: RET . SEMICOLON
   41            | RET . expr SEMICOLON

    SEMICOLON  shift, and go to state 116
    SUB        shift, and go to state 18
    NOT        shift, and go to state 19
    LB         shift, and go to state 20
    TRUE       shift, and go to state 21
    FALSE      shift, and go to state 22
    I_CONST    shift, and go to state 23
    F_CONST    shift, and go to state 24
    STRING     shift, and go to state 25
    ID         shift, and go to state 26

    expr  go to state 117


State 101

   12 type_spec: STRING .
   73 expr: STRING .

    ID        reduce using rule 12 (type_spec)
    $default  reduce using rule 73 (expr)


State 102

   27 content: var_decl .

    $default  reduce using rule 27 (content)


State 103

    6 var_decl: type_spec . ID SEMICOLON
    7         | type_spec . ID ASGN expr SEMICOLON

    ID  shift, and go to state 118


State 104

   30 stmt: compound_stmt .

    $default  reduce using rule 30 (stmt)


State 105

   25 content_list: content_list content .

    $default  reduce using rule 25 (content_list)


State 106

   28 content: stmt .

    $default  reduce using rule 28 (content)


State 107

   34 stmt: print_stmt . SEMICOLON

    SEMICOLON  shift, and go to state 119


State 108

   32 stmt: while_stmt .

    $default  reduce using rule 32 (stmt)


State 109

   31 stmt: if_stmt .

    $default  reduce using rule 31 (stmt)


State 110

   33 stmt: return_stmt .

    $default  reduce using rule 33 (stmt)


State 111

   29 stmt: expr . SEMICOLON
   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    SEMICOLON  shift, and go to state 120
    ADD        shift, and go to state 45
    SUB        shift, and go to state 46
    MUL        shift, and go to state 47
    DIV        shift, and go to state 48
    MOD        shift, and go to state 49
    INC        shift, and go to state 50
    DEC        shift, and go to state 51
    MT         shift, and go to state 52
    LT         shift, and go to state 53
    MTE        shift, and go to state 54
    LTE        shift, and go to state 55
    EQ         shift, and go to state 56
    NE         shift, and go to state 57
    AND        shift, and go to state 58
    OR         shift, and go to state 59


State 112

   35 print_stmt: PRINT LB . ID RB
   36           | PRINT LB . STRING RB

    STRING  shift, and go to state 121
    ID      shift, and go to state 122


State 113

   38 if_stmt: IF LB . expr RB stmt
   39        | IF LB . expr RB stmt ELSE stmt

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 123


State 114

   37 while_stmt: WHILE LB . expr RB stmt

    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    expr  go to state 124


State 115

   24 compound_stmt: LCB $@2 . content_list RCB

    $default  reduce using rule 26 (content_list)

    content_list  go to state 125


State 116

   40 return_stmt: RET SEMICOLON .

    $default  reduce using rule 40 (return_stmt)


State 117

   41 return_stmt: RET expr . SEMICOLON
   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    SEMICOLON  shift, and go to state 126
    ADD        shift, and go to state 45
    SUB        shift, and go to state 46
    MUL        shift, and go to state 47
    DIV        shift, and go to state 48
    MOD        shift, and go to state 49
    INC        shift, and go to state 50
    DEC        shift, and go to state 51
    MT         shift, and go to state 52
    LT         shift, and go to state 53
    MTE        shift, and go to state 54
    LTE        shift, and go to state 55
    EQ         shift, and go to state 56
    NE         shift, and go to state 57
    AND        shift, and go to state 58
    OR         shift, and go to state 59


State 118

    6 var_decl: type_spec ID . SEMICOLON
    7         | type_spec ID . ASGN expr SEMICOLON

    SEMICOLON  shift, and go to state 15
    ASGN       shift, and go to state 16


State 119

   34 stmt: print_stmt SEMICOLON .

    $default  reduce using rule 34 (stmt)


State 120

   29 stmt: expr SEMICOLON .

    $default  reduce using rule 29 (stmt)


State 121

   36 print_stmt: PRINT LB STRING . RB

    RB  shift, and go to state 127


State 122

   35 print_stmt: PRINT LB ID . RB

    RB  shift, and go to state 128


State 123

   38 if_stmt: IF LB expr . RB stmt
   39        | IF LB expr . RB stmt ELSE stmt
   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    MT   shift, and go to state 52
    LT   shift, and go to state 53
    MTE  shift, and go to state 54
    LTE  shift, and go to state 55
    EQ   shift, and go to state 56
    NE   shift, and go to state 57
    AND  shift, and go to state 58
    OR   shift, and go to state 59
    RB   shift, and go to state 129


State 124

   37 while_stmt: WHILE LB expr . RB stmt
   48 expr: expr . OR expr
   49     | expr . AND expr
   50     | expr . EQ expr
   51     | expr . NE expr
   52     | expr . LTE expr
   53     | expr . LT expr
   54     | expr . MTE expr
   55     | expr . MT expr
   56     | expr . ADD expr
   57     | expr . SUB expr
   58     | expr . MUL expr
   59     | expr . DIV expr
   60     | expr . MOD expr
   62     | expr . INC
   63     | expr . DEC

    ADD  shift, and go to state 45
    SUB  shift, and go to state 46
    MUL  shift, and go to state 47
    DIV  shift, and go to state 48
    MOD  shift, and go to state 49
    INC  shift, and go to state 50
    DEC  shift, and go to state 51
    MT   shift, and go to state 52
    LT   shift, and go to state 53
    MTE  shift, and go to state 54
    LTE  shift, and go to state 55
    EQ   shift, and go to state 56
    NE   shift, and go to state 57
    AND  shift, and go to state 58
    OR   shift, and go to state 59
    RB   shift, and go to state 130


State 125

   24 compound_stmt: LCB $@2 content_list . RCB
   25 content_list: content_list . content

    PRINT    shift, and go to state 95
    IF       shift, and go to state 96
    WHILE    shift, and go to state 97
    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    LCB      shift, and go to state 98
    RCB      shift, and go to state 131
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    RET      shift, and go to state 100
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 101
    ID       shift, and go to state 26
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    BOOL     shift, and go to state 5

    var_decl       go to state 102
    type_spec      go to state 103
    compound_stmt  go to state 104
    content        go to state 105
    stmt           go to state 106
    print_stmt     go to state 107
    while_stmt     go to state 108
    if_stmt        go to state 109
    return_stmt    go to state 110
    expr           go to state 111


State 126

   41 return_stmt: RET expr SEMICOLON .

    $default  reduce using rule 41 (return_stmt)


State 127

   36 print_stmt: PRINT LB STRING RB .

    $default  reduce using rule 36 (print_stmt)


State 128

   35 print_stmt: PRINT LB ID RB .

    $default  reduce using rule 35 (print_stmt)


State 129

   38 if_stmt: IF LB expr RB . stmt
   39        | IF LB expr RB . stmt ELSE stmt

    PRINT    shift, and go to state 95
    IF       shift, and go to state 96
    WHILE    shift, and go to state 97
    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    LCB      shift, and go to state 98
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    RET      shift, and go to state 100
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    compound_stmt  go to state 104
    stmt           go to state 132
    print_stmt     go to state 107
    while_stmt     go to state 108
    if_stmt        go to state 109
    return_stmt    go to state 110
    expr           go to state 111


State 130

   37 while_stmt: WHILE LB expr RB . stmt

    PRINT    shift, and go to state 95
    IF       shift, and go to state 96
    WHILE    shift, and go to state 97
    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    LCB      shift, and go to state 98
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    RET      shift, and go to state 100
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    compound_stmt  go to state 104
    stmt           go to state 133
    print_stmt     go to state 107
    while_stmt     go to state 108
    if_stmt        go to state 109
    return_stmt    go to state 110
    expr           go to state 111


State 131

   24 compound_stmt: LCB $@2 content_list RCB .

    $default  reduce using rule 24 (compound_stmt)


State 132

   38 if_stmt: IF LB expr RB stmt .
   39        | IF LB expr RB stmt . ELSE stmt

    ELSE  shift, and go to state 134

    $default  reduce using rule 38 (if_stmt)


State 133

   37 while_stmt: WHILE LB expr RB stmt .

    $default  reduce using rule 37 (while_stmt)


State 134

   39 if_stmt: IF LB expr RB stmt ELSE . stmt

    PRINT    shift, and go to state 95
    IF       shift, and go to state 96
    WHILE    shift, and go to state 97
    SUB      shift, and go to state 18
    NOT      shift, and go to state 19
    LB       shift, and go to state 20
    LCB      shift, and go to state 98
    TRUE     shift, and go to state 21
    FALSE    shift, and go to state 22
    RET      shift, and go to state 100
    I_CONST  shift, and go to state 23
    F_CONST  shift, and go to state 24
    STRING   shift, and go to state 25
    ID       shift, and go to state 26

    compound_stmt  go to state 104
    stmt           go to state 135
    print_stmt     go to state 107
    while_stmt     go to state 108
    if_stmt        go to state 109
    return_stmt    go to state 110
    expr           go to state 111


State 135

   39 if_stmt: IF LB expr RB stmt ELSE stmt .

    $default  reduce using rule 39 (if_stmt)
